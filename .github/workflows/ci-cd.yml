name: CI-CD

on:
  push: 
     branches: [main]

jobs:
  build:
    runs-on: [ubuntu-latest]

    steps:
      - name: checking source code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_PASSWORD }}
        run: echo $DOCKER_ACCESS_TOKEN | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Build docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/url-shortner-backend:latest .

      - name: Publish image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/url-shortner-backend:latest
  
  deploy:
    needs: build
    runs-on: [aws-ec2]

    steps:
      - name: Log in to Docker Hub
        env: 
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_PASSWORD }}
          ONGO_USER: ${{ secrets.MONGO_USER }}
          MONGO_PASS: ${{ secrets.MONGO_PASS }}
          JWTSECRET: ${{ secrets.JWTSECRET }}
        run: echo $DOCKER_ACCESS_TOKEN | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Pull Docker image from Docker Hub
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/url-shortner-backend:latest

      - name: Stop and remove old container (if exists)
        run: |
          docker stop nodejs-app-container || true
          docker rm nodejs-app-container || true
          
      - name: Run Docker container
        run: |
          docker run -d \             
            -e MONGO_USER=${{ env.MONGO_USER }} \
            -e MONGO_PASS=${{ env.MONGO_PASS }} \ 
            -e JWTSECRET={{ env.JWTSECRET }}\
            -p ${{ secrets.DOCKER_PORT }}:${{ secrets.DOCKER_PORT }} \
            --name nodejs-app-container ${{ secrets.DOCKER_USERNAME }}/url-shortner-backend:latest
      